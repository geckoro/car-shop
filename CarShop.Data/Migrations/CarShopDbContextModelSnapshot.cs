// <auto-generated />
using System;
using CarShop.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarShop.Data.Migrations
{
    [DbContext(typeof(CarShopDbContext))]
    partial class CarShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarShop.Data.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4f29448-4480-41c0-97d9-644000276fd2"),
                            Mileage = 0,
                            Model = "Tesla"
                        },
                        new
                        {
                            Id = new Guid("105a96cb-60db-4d97-9ff2-17bc1452b0c5"),
                            Mileage = 31120,
                            Model = "Mazda"
                        },
                        new
                        {
                            Id = new Guid("d863fdbb-5856-42e8-b411-2e77c00b0f24"),
                            Mileage = 91234,
                            Model = "Audi"
                        });
                });

            modelBuilder.Entity("CarShop.Data.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbbbf4bf-0cbb-4faf-a7ac-1933e334d2bc"),
                            FirstName = "Mike",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = new Guid("fda8fffa-143c-4a53-81e7-aa80c7c3225e"),
                            FirstName = "Joanna",
                            LastName = "Christens"
                        },
                        new
                        {
                            Id = new Guid("c860a99f-a3bd-4c94-8d19-d7b73a374173"),
                            FirstName = "Bob",
                            LastName = "Kennedy"
                        });
                });

            modelBuilder.Entity("CarShop.Data.Models.Car", b =>
                {
                    b.HasOne("CarShop.Data.Models.Client", "Client")
                        .WithMany("Cars")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CarShop.Data.Models.Client", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}

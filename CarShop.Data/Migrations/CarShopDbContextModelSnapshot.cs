// <auto-generated />
using System;
using CarShop.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarShop.Data.Migrations
{
    [DbContext(typeof(CarShopDbContext))]
    partial class CarShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarShop.Data.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("87033b1e-138d-4851-b065-b9af8f69aaeb"),
                            Mileage = 0,
                            Model = "Tesla"
                        },
                        new
                        {
                            Id = new Guid("9e8c6393-13e3-4d90-85c3-9e92d92b16c2"),
                            Mileage = 31120,
                            Model = "Mazda"
                        },
                        new
                        {
                            Id = new Guid("47b1ea3c-2b62-4ea8-97f2-7098c0a1aa42"),
                            Mileage = 91234,
                            Model = "Audi"
                        });
                });

            modelBuilder.Entity("CarShop.Data.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("518acb24-1492-497a-b35f-0c9152729418"),
                            FirstName = "Mike",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = new Guid("c05cfe7c-6b03-4785-8b55-76c9fb5c9fa5"),
                            FirstName = "Joanna",
                            LastName = "Christens"
                        },
                        new
                        {
                            Id = new Guid("e5de5d91-3d5d-4f63-88da-0d452ebdec1a"),
                            FirstName = "Bob",
                            LastName = "Kennedy"
                        });
                });

            modelBuilder.Entity("CarShop.Data.Models.Car", b =>
                {
                    b.HasOne("CarShop.Data.Models.Client", "Client")
                        .WithMany("Cars")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CarShop.Data.Models.Client", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
